*coBra.txt*   Plugin that forces brackets and quotes to be smart

[co]erced [bra]cket


coBra run in insert mode only, default pairs are "'`{([
coBra works by buffer and more precisely by file type. Be sure to have the
|filetype| option on (you can check it with `:filetype`, and look for
"detection:ON"). This way coBra will use the corresponding set of pairs if
available (defined with |g:coBraPairs|). If not he will use the default one.

coBra will map for insert mode only <BS>, <CR> and the two characters of each
pair. He expects that no mapping for these keys already exists.
If not the concerned mapping will fail.

All settings are optional.

==============================================================================

                                                                *g:coBraPairs*

You can customize the pairs. If the open character is the same as the close
character the pair is considered as quotes (different behavior on some
situation compared to real brackets). You have to enter a set of pairs by
file type. Of course you can customize the default set too.
Only one restriction, a pair is composed of two characters max.
>
  let g:coBraPairs = {
    \  'default': [
    \    ['"', '"'],
    \    ["'", "'"],
    \  ],
    \  'rust': [
    \    ['"', '"'],
    \    ['<', '>'],
    \    ['{', '}'],
    \    ['(', ')'],
    \    ['[', ']']
    \  ]
    \ }
<

                                                   *g:coBraMaxPendingCloseTry*

Preformance is king when we type. For that reason you can set
|g:coBraMaxPendingCloseTry| to a scpecific value between 0 and
|maxfuncdepth|, default 10. When you type an openning bracket, before
inserting and auto closing it the script looks recursively for a "pending"
close bracket that does not have a matching open one. If it find one the
script simply inserts the open bracket without auto closing it to complete the
pair. |g:coBraMaxPendingCloseTry| limits the number of try of this logic.

                                                           *g:coBraFullBuffer*

By default, and for the sake of performance, coBra takes into account only the
visible lines from the current window. With this option you can configure
coBra to run on the entire file.
>
  let g:coBraFullBuffer
<

                                                              *g:coBraLineMax*

Like |g:coBraFullBuffer| but instead of the whole file, you can set a range
of lines (starting from the cursor position, forward and backward).
>
  let g:coBraLineMax = 10
<

==============================================================================
LICENSE

Mozilla Public License 2.0
https://mozilla.org/MPL/2.0/

